{"version":3,"sources":["SortingAlgorithms/SortingAlgorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["mergeSort","array","animations","length","mergeSortHelper","slice","arr","l","r","m","Math","floor","X","Array","fill","i","j","k","animation","comparison","swap","push","idx","merge","quickSort","quickSortHelper","si","ei","c","cnt","first","second","temp","x","temp1","partition","heapSort","n","heapify","heapSortHelper","largest","left","right","SortingVisualizer","props","state","this","resetArray","randomIntFromInterval","setState","console","log","check","sortingAlgorithms","newAnimations","arrayBars","document","getElementsByClassName","bar1idx","bar2idx","bar1style","style","bar2style","color","setTimeout","backgroundColor","newHeight","height","sortedArray","len","newHeight1","newHeight2","bubbleSortHelper","jsSortedArray","sort","a","b","SortedArray","arraysEqual","className","onClick","bubbleSort","map","value","React","Component","min","max","random","array1","array2","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.928fccb4.chunk.js","sourcesContent":["export function mergeSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    var arr=array.slice();\r\n    mergeSortHelper(arr,0,array.length-1, animations);\r\n\r\n    return animations;\r\n}\r\n\r\n\r\n\r\nfunction mergeSortHelper(arr,l, r,animations){\r\n    if(l>=r){\r\n        return ;//returns recursively\r\n    }\r\n    var m =Math.floor((l+r)/2);\r\n    mergeSortHelper(arr,l,m,animations);\r\n    mergeSortHelper(arr,m+1,r,animations);\r\n    merge(arr,l,m,r,animations);\r\n    \r\n}\r\n\r\n\r\nfunction merge(arr, l, m, r,animations)\r\n{\r\n\r\n\r\n    var X = new Array(r-l+1).fill(0);\r\n\r\n    var i = l;\r\n \r\n    var j = m+1;\r\n \r\n \r\n    var k = 0;\r\n \r\n    while (i <=m && j <=r) {\r\n\r\n        var animation={};\r\n        if (arr[i] <= arr[j]) {\r\n            animation.comparison = [i,j];\r\n            animation.swap = [k+l,arr[i]];\r\n            X[k] = arr[i];\r\n            i++;\r\n        }\r\n        else {\r\n            animation.comparison = [i,j];\r\n            animation.swap = [k+l,arr[j]];\r\n            X[k] = arr[j];\r\n            j++;\r\n        }\r\n        animations.push(animation);\r\n        k++;\r\n    }\r\n \r\n\r\n    while (i <= m) {\r\n        animations.push({\r\n            comparison : [i,i],\r\n            swap : [k+l,arr[i]],\r\n        });\r\n        X[k] = arr[i];\r\n        i++;\r\n        k++;\r\n    }\r\n \r\n \r\n    while (j <=r) {\r\n        animations.push({\r\n            comparison : [j,j],\r\n            swap : [k+l,arr[j]],\r\n        });\r\n\r\n        X[k] = arr[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n    var idx=l;\r\n    for(i=0;i<k;i++){\r\n        arr[idx]=X[i];\r\n        idx++;\r\n    }\r\n}\r\n\r\n\r\n//bubble sort \r\nexport function bubbleSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    var arr=array.slice();\r\n    bubbleSortHelper(arr,animations,arr.length);\r\n    return animations;\r\n}\r\n\r\nfunction bubbleSortHelper(arr,animations,n){\r\n    \r\n    var i;\r\n    var j;\r\n    for(i=0;i<n;i++){\r\n        for(j=0;j<(n-1)-i;j++){\r\n            var animation={};\r\n            animation.comparison=[j,j+1];\r\n            animation.swap ={}\r\n            if(arr[j]>arr[j+1]){\r\n                animation.swap.first=[j,arr[j+1]];\r\n                animation.swap.second=[j+1,arr[j]];\r\n                var temp=arr[j];\r\n                arr[j]=arr[j+1];\r\n                arr[j+1]=temp;\r\n            }\r\n            else{\r\n                animation.swap.first=[j,arr[j]];\r\n                animation.swap.second=[j+1,arr[j+1]];\r\n            }\r\n            animations.push(animation);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//Implementing quicksort\r\nexport function quickSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    var arr=array.slice();\r\n    quickSortHelper(arr,0,array.length-1, animations);\r\n\r\n    return animations;\r\n}\r\n\r\nfunction quickSortHelper(arr, si, ei, animations){\r\n\r\n  if(si>=ei){\r\n      return;\r\n  }\r\n\r\n  var c= partition(arr,si,ei,animations);\r\n  quickSortHelper(arr,si,c-1,animations);\r\n  quickSortHelper(arr,c+1,ei,animations);\r\n\r\n}\r\n\r\nfunction partition(arr, si, ei, animations){\r\n    var cnt=si;\r\n    for(let i=si+1;i<=ei;i++){\r\n        if(arr[i]<=arr[si]){\r\n            cnt++;\r\n        }\r\n    }\r\n    var animation={};\r\n    animation.comparison=[si,cnt];\r\n    animation.swap ={}\r\n    animation.swap.first=[si,arr[cnt]];\r\n    animation.swap.second=[cnt,arr[si]];\r\n    animations.push(animation);\r\n    var temp=arr[cnt];\r\n    arr[cnt]=arr[si];\r\n    arr[si]=temp;\r\n    var x=arr[cnt];\r\n    var i=si;\r\n    var j=ei;\r\n    while(i<cnt&&j>cnt){\r\n        \r\n        if(arr[i]<=x){\r\n            i++;\r\n        }\r\n        else if(arr[j]>x){\r\n            j--;\r\n        }\r\n\r\n        else{\r\n            animation={};\r\n            animation.comparison=[i,j];\r\n            animation.swap ={};\r\n            animation.swap.first=[i,arr[j]];\r\n            animation.swap.second=[j,arr[i]];\r\n            animations.push(animation);\r\n            var temp1=arr[i];\r\n            arr[i]=arr[j];\r\n            arr[j]=temp1;\r\n            i++;\r\n            j--;\r\n        }\r\n        \r\n    }\r\n    return cnt;\r\n}\r\n\r\n\r\n//Implementing Heap Sort\r\n\r\nexport function heapSort(array){\r\n    const animations=[];\r\n    if(array.length<=1) return array;\r\n    var arr=array.slice();\r\n    heapSortHelper(arr,array.length, animations);\r\n    return animations;\r\n}\r\n\r\nfunction heapSortHelper(arr,n, animations){\r\n\r\n    var start=Math.floor((n/2)-1);\r\n\r\n    for(let i=start;i>=0;i--){\r\n        heapify(arr,n,i,animations);\r\n    }\r\n\r\n    for(let i=0;i<n;i++){\r\n        var animation={};\r\n        animation.comparison=[0,n-1-i];\r\n        animation.swap ={};\r\n        animation.swap.first=[0,arr[n-1-i]];\r\n        animation.swap.second=[n-1-i,arr[0]];\r\n        animations.push(animation);\r\n        var temp=arr[0];\r\n        arr[0]=arr[n-1-i];\r\n        arr[n-1-i]=temp;\r\n        heapify(arr,n-1-i,0,animations);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction heapify(arr, n, i,animations){\r\n    var largest=i;\r\n    var left=2*i+1;\r\n    var right=2*i+2;\r\n    if(left<n&&arr[left]>arr[largest]){\r\n         largest=left;\r\n    }\r\n    if(right<n&&arr[right]>arr[largest]){\r\n          largest=right;\r\n    }\r\n\r\n    if(largest!==i){\r\n\r\n        var animation={};\r\n        animation.comparison=[i,largest];\r\n        animation.swap ={};\r\n        animation.swap.first=[i,arr[largest]];\r\n        animation.swap.second=[largest,arr[i]];\r\n        animations.push(animation);\r\n        var temp=arr[largest];\r\n        arr[largest]=arr[i];\r\n        arr[i]=temp;\r\n        heapify(arr,n,largest,animations);\r\n    }\r\n}","import React from 'react';\r\nimport './SortingVisualizer.css';\r\nimport * as sortingAlgorithms from '../SortingAlgorithms/SortingAlgorithms.js'\r\n\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            array: [],\r\n            \r\n        };\r\n    };\r\n \r\n    \r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n\r\n        const array = [];\r\n        for (let i=0;i<300;i++){\r\n            array.push(randomIntFromInterval(5,500));\r\n        }\r\n        this.setState({array});\r\n        \r\n    }\r\n   \r\n    mergeSort(){\r\n        /*\r\n        const sArr = sortingAlgorithms.mergeSort(this.state.array.slice());\r\n        console.log(sArr.length)\r\n        this.setState({array:sArr});\r\n         */\r\n        \r\n        \r\n        console.log(this.state.check);\r\n        const animations = sortingAlgorithms.mergeSort(this.state.array.slice());\r\n        const newAnimations=[];\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        for(let i=0;i<newAnimations.length;i++){\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !==2;\r\n            if (isColorChange){\r\n                const [bar1idx, bar2idx] = newAnimations[i];\r\n                const bar1style= arrayBars[bar1idx].style;\r\n                const bar2style= arrayBars[bar2idx].style;\r\n                const color = i%3 ===0 ? 'red' : 'blueviolet';\r\n                setTimeout( () => {\r\n                     bar1style.backgroundColor=color;\r\n                     bar2style.backgroundColor=color;\r\n                }, i*2);\r\n            }\r\n            else{\r\n                setTimeout( ()=>{\r\n                    const [bar1idx, newHeight] = newAnimations[i];\r\n                    const bar1style= arrayBars[bar1idx].style;\r\n                    //const bar2style= arrayBars[bar2idx].style;\r\n                    bar1style.height = `${newHeight}px` ;\r\n                   \r\n                }, i*2);\r\n            }\r\n            \r\n        }\r\n\r\n            //updating state as sorted array\r\n            const sortedArray=[];\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            var len=this.state.array.length;\r\n            for(let i=0;i<len;i++){\r\n            sortedArray.push(arrayBars[i].height);\r\n            }\r\n            this.setState({array:sortedArray});\r\n        \r\n         \r\n    }\r\n    \r\n\r\n    quickSort(){\r\n        const animations = sortingAlgorithms.quickSort(this.state.array.slice());\r\n        const newAnimations=[];\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        for(let i=0;i<newAnimations.length;i++){\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !==2;\r\n            if (isColorChange){\r\n                const [bar1idx, bar2idx] = newAnimations[i];\r\n                const bar1style= arrayBars[bar1idx].style;\r\n                const bar2style= arrayBars[bar2idx].style;\r\n                const color = i%3 ===0 ? 'red' : 'blueviolet';\r\n                setTimeout( () => {\r\n                     bar1style.backgroundColor=color;\r\n                     bar2style.backgroundColor=color;\r\n                }, i*8);\r\n            }\r\n            else{\r\n                setTimeout( ()=>{\r\n                    console.log('else-block');\r\n                    const [bar1idx, newHeight1] = newAnimations[i].first;\r\n                    const [bar2idx, newHeight2] = newAnimations[i].second;\r\n                    const bar1style= arrayBars[bar1idx].style;\r\n                    const bar2style= arrayBars[bar2idx].style;\r\n                    bar1style.height = `${newHeight1}px` ;\r\n                    bar2style.height = `${newHeight2}px` ;\r\n                    console.log(bar1style.height);\r\n                }, i*8);\r\n            }\r\n\r\n        }\r\n\r\n        //updating state as sorted array\r\n        const sortedArray=[];\r\n        const arrayBars= document.getElementsByClassName('array-bar');\r\n        var len=this.state.array.length;\r\n        for(let i=0;i<len;i++){\r\n            sortedArray.push(arrayBars[i].height);\r\n        }\r\n        this.setState({array:sortedArray});\r\n\r\n\r\n    }\r\n\r\n    heapSort(){\r\n\r\n        const animations = sortingAlgorithms.heapSort(this.state.array.slice());\r\n        const newAnimations=[];\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        for(let i=0;i<newAnimations.length;i++){\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !==2;\r\n            if (isColorChange){\r\n                const [bar1idx, bar2idx] = newAnimations[i];\r\n                const bar1style= arrayBars[bar1idx].style;\r\n                const bar2style= arrayBars[bar2idx].style;\r\n                const color = i%3 ===0 ? 'red' : 'blueviolet';\r\n                setTimeout( () => {\r\n                     bar1style.backgroundColor=color;\r\n                     bar2style.backgroundColor=color;\r\n                }, i*2);\r\n            }\r\n            else{\r\n                setTimeout( ()=>{\r\n                    console.log('else-block');\r\n                    const [bar1idx, newHeight1] = newAnimations[i].first;\r\n                    const [bar2idx, newHeight2] = newAnimations[i].second;\r\n                    const bar1style= arrayBars[bar1idx].style;\r\n                    const bar2style= arrayBars[bar2idx].style;\r\n                    bar1style.height = `${newHeight1}px` ;\r\n                    bar2style.height = `${newHeight2}px` ;\r\n                    console.log(bar1style.height);\r\n                }, i*2);\r\n            }\r\n\r\n        }\r\n\r\n        //updating state as sorted array\r\n        const sortedArray=[];\r\n        const arrayBars= document.getElementsByClassName('array-bar');\r\n        var len=this.state.array.length;\r\n        for(let i=0;i<len;i++){\r\n            sortedArray.push(arrayBars[i].height);\r\n        }\r\n        this.setState({array:sortedArray});\r\n\r\n    }\r\n\r\n    bubbleSort(){\r\n\r\n        const animations = sortingAlgorithms.bubbleSort(this.state.array.slice());\r\n        const newAnimations=[];\r\n        for(const animation of animations){\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.comparison);\r\n            newAnimations.push(animation.swap);\r\n        }\r\n        for(let i=0;i<newAnimations.length;i++){\r\n            const arrayBars= document.getElementsByClassName('array-bar');\r\n            const isColorChange = i%3 !==2;\r\n            if (isColorChange){\r\n                const [bar1idx, bar2idx] = newAnimations[i];\r\n                const bar1style= arrayBars[bar1idx].style;\r\n                const bar2style= arrayBars[bar2idx].style;\r\n                const color = i%3 ===0 ? 'red' : 'blueviolet';\r\n                setTimeout( () => {\r\n                     bar1style.backgroundColor=color;\r\n                     bar2style.backgroundColor=color;\r\n                }, i*2);\r\n            }\r\n            else{\r\n                setTimeout( ()=>{\r\n                    console.log('else-block');\r\n                    const [bar1idx, newHeight1] = newAnimations[i].first;\r\n                    const [bar2idx, newHeight2] = newAnimations[i].second;\r\n                    const bar1style= arrayBars[bar1idx].style;\r\n                    const bar2style= arrayBars[bar2idx].style;\r\n                    bar1style.height = `${newHeight1}px` ;\r\n                    bar2style.height = `${newHeight2}px` ;\r\n                }, i*2);\r\n            }\r\n\r\n        }\r\n\r\n        //updating state as sorted array\r\n        const sortedArray=[];\r\n        const arrayBars= document.getElementsByClassName('array-bar');\r\n        var len=this.state.array.length;\r\n        for(let i=0;i<len;i++){\r\n            sortedArray.push(arrayBars[i].height);\r\n        }\r\n        this.setState({array:sortedArray});\r\n\r\n    }\r\n\r\n    testSortingAlgorithms(){\r\n        for(let j=0;j<100;j++){\r\n        const array = [];\r\n        const len=randomIntFromInterval(1,1000)\r\n        for (let i=0;i<len;i++){\r\n            array.push(randomIntFromInterval(5,600));\r\n        }\r\n        const jsSortedArray = array.slice().sort((a,b)=>a-b);\r\n        const SortedArray = sortingAlgorithms.heapSort(array.slice());\r\n        console.log(arraysEqual(jsSortedArray,SortedArray));\r\n    }\r\n    }\r\n\r\n\r\n    render(){\r\n        const {array} =this.state;\r\n\r\n        return (\r\n        <div className=\"main\">   \r\n            <div className=\"buttons_body\">\r\n                <p className=\"project_name\">Sorting Visualizer</p>\r\n                <button className=\"button\" onClick={() => this.resetArray() }>Generate New Array</button>\r\n                <button className=\"button\" onClick={() => this.mergeSort() }>Merge Sort</button>\r\n                <button className=\"button\" onClick={() => this.quickSort() }>Quick Sort</button>\r\n                <button className=\"button\" onClick={() => this.heapSort() }>Heap Sort</button>\r\n                <button className=\"button\" onClick={() => this.bubbleSort() }>Bubble Sort</button>\r\n            </div>\r\n\r\n            <div className=\"array-container\">\r\n            {array.map((value,idx)=>(\r\n                <div \r\n                className=\"array-bar\" \r\n                key={idx} \r\n                style={{height: `${value}px`}}> </div>\r\n            ))}\r\n            </div>\r\n\r\n        </div> \r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction randomIntFromInterval(min,max){\r\n    return Math.floor(Math.random()*(max-min+1)+min);\r\n}\r\n\r\nfunction arraysEqual(array1,array2){\r\n    \r\n    for(let i=0;i<array1.length;i++){\r\n    if(array1[i]!==array2[i]){\r\n        return false;\r\n    }\r\n}\r\n    return true;\r\n}","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer.jsx'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <SortingVisualizer>\n          \n        </SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}